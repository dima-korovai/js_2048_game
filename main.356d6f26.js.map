{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","score","messageWin","messageStart","messageGameOver","fieldRow","querySelectorAll","totalScore","rows","columns","gameField","udateGameField","randomRow","Math","floor","random","randomCell","smallDigit","updeteInfo","checkforfGameOver","arrOfNumbers","arr","num","push","max","classList","remove","row","cell","gameCell","fieldCell","children","textContent","className","add","emptyCells","possiblesMovements","restart","moveCells","direction","gameFieldReversed","r","slide","reverse","coll","addEventListener","contains","ev","key","gameFieldRow","numbers","filter","el","length","x"],"mappings":";AAAA,aAuNA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArNA,IAAMA,EAASC,SAASC,cAAc,WAChCC,EAAQF,SAASC,cAAc,eAE/BE,EAAaH,SAASC,cAAc,gBACpCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAkBL,SAASC,cAAc,iBAEzCK,EAAWN,SAASO,iBAAiB,cAEvCC,EAAa,EACXC,EAAO,EACPC,EAAU,EAEVC,EAAY,CAChB,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGZ,SAASC,IACDC,IAAAA,EAAYC,KAAKC,MAAMD,KAAKE,SAAWP,GACvCQ,EAAaH,KAAKC,MAAMD,KAAKE,SAAWN,GAExCQ,EADeJ,KAAKC,MAAsB,GAAhBD,KAAKE,UACH,EAAI,EAAI,EAED,IAArCL,EAAUE,GAAWI,IACvBN,EAAUE,GAAWI,GAAcC,EACnCC,MAEAP,IACAQ,KAGIC,IAdkB,EAclBA,EAAe,GAEHV,EAAAA,EAAAA,GAhBM,IAgBK,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBW,IAAkB,EACTA,EAAAA,EADS,EAAA,OAAA,IACJ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAZC,IAAAA,EAAY,EAAA,MACrBF,EAAaG,KAAKD,IAFO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MAhBL,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAwBL,OAFAT,KAAKW,IAALX,MAAAA,KAAYO,IAG7BlB,EAAWuB,UAAUC,OAAO,UAIhC,SAASR,IACF,IAAA,IAAIS,EAAM,EAAGA,EAAMnB,EAAMmB,IACvB,IAAA,IAAIC,EAAO,EAAGA,EAAOnB,EAASmB,IAAQ,CACnCC,IAAAA,EAAWnB,EAAUiB,GAAKC,GAC1BE,EAAYzB,EAASsB,GAAKI,SAASH,GAExB,IAAbC,GACFC,EAAUE,YAAc,GACxBF,EAAUG,UAAY,eAEtBH,EAAUE,YAAcH,EACxBC,EAAUG,UAAY,aAEtBH,EACGL,UAAUS,IAAmBL,eAAAA,OAAAA,MAMxC,SAASV,IAGF,IAFDgB,IAAAA,EAAa,EAERR,EAAM,EAAGA,EAAMnB,EAAMmB,IACvB,IAAA,IAAIC,EAAO,EAAGA,EAAOnB,EAASmB,IACJ,IAAzBlB,EAAUiB,GAAKC,IACjBO,IAKa,IAAfA,GAAqBC,KACvBhC,EAAgBqB,UAAUC,OAAO,UAIrC,SAASU,IACF,IAAA,IAAIT,EAAM,EAAGA,EAAMnB,EAAO,EAAGmB,IAC3B,IAAA,IAAIC,EAAO,EAAGA,EAAOnB,EAASmB,IAC7BlB,GAAAA,EAAUiB,GAAKC,KAAUlB,EAAUiB,EAAM,GAAGC,GACvC,OAAA,EAKR,IAAA,IAAID,EAAM,EAAGA,EAAMnB,EAAMmB,IACvB,IAAA,IAAIC,EAAO,EAAGA,EAAOnB,EAAU,EAAGmB,IACjClB,GAAAA,EAAUiB,GAAKC,KAAUlB,EAAUiB,GAAKC,EAAO,GAC1C,OAAA,EAyBf,SAASS,IACF,IAAA,IAAIV,EAAM,EAAGA,EAAMnB,EAAMmB,IACvB,IAAA,IAAIC,EAAO,EAAGA,EAAOnB,EAASmB,IACjClB,EAAUiB,GAAKC,GAAQ,EAiC7B,SAASU,EAAUC,GAQZ,IAPCC,IAAAA,EAAoB,CACxB,GACA,GACA,GACA,IAGOC,EAAI,EAAGA,EAAIjC,EAAMiC,IAAK,CACxB,IAAA,IAAIb,EAAO,EAAGA,EAAOnB,EAASmB,IACjCY,EAAkBC,GAAGlB,KAAKb,EAAUkB,GAAMa,IAGxCd,IAAAA,EAAMjB,EAAU+B,GAEZF,OAAAA,GACD,IAAA,OACHZ,EAAMjB,EAAU+B,GAChBd,EAAMe,EAAMf,GACZjB,EAAU+B,GAAKd,EACf,MAEG,IAAA,QACHA,EAAIgB,UACJhB,EAAMjB,EAAU+B,IAChBd,EAAMe,EAAMf,IACRgB,UACJjC,EAAU+B,GAAKd,EACf,MAEG,IAAA,KACHA,EAAMa,EAAkBC,GACxBd,EAAMe,EAAMf,GACZa,EAAkBC,GAAKd,EACvB,MAEG,IAAA,QACHA,EAAMa,EAAkBC,IACpBE,WACJhB,EAAMe,EAAMf,IACRgB,UACJH,EAAkBC,GAAKd,GAKzBY,GAAc,OAAdA,GAAoC,SAAdA,EACnB,IAAA,IAAIZ,EAAM,EAAGA,EAAMnB,EAAMmB,IACvB,IAAA,IAAIiB,EAAO,EAAGA,EAAOnC,EAASmC,IACjClC,EAAUkC,GAAMjB,GAAOa,EAAkBb,GAAKiB,GAxGtD9C,EAAO+C,iBAAiB,QAAS,WAC/B/C,EAAO2B,UAAUC,OAAO,SACxB5B,EAAO2B,UAAUS,IAAI,WAErB/B,EAAasB,UAAUS,IAAI,UAC3B9B,EAAgBqB,UAAUS,IAAI,UAC9BhC,EAAWuB,UAAUS,IAAI,UACzB3B,EAAa,EACbN,EAAM+B,YAAc,EAEhBlC,EAAO2B,UAAUqB,SAAS,aAC5BhD,EAAOkC,YAAc,UACrBK,KAGF1B,IACAA,MAWFZ,SAAS8C,iBAAiB,UAAW,SAASE,GACtCC,IAAAA,EAAMD,EAAGC,IAEXlD,GAAAA,EAAO2B,UAAUqB,SAAS,WACpBE,OAAAA,GACD,IAAA,YACHV,EAAU,QACV3B,IACA,MAEG,IAAA,aACH2B,EAAU,SACV3B,IACA,MAEG,IAAA,UACH2B,EAAU,MACV3B,IACA,MAEG,IAAA,YACH2B,EAAU,QACV3B,OA6DR,IAAM+B,EAAQ,SAACO,GAGR,IAFDC,IAAAA,EAAUD,EAAaE,OAAO,SAAAC,GAAMA,OAAO,IAAPA,IAE/B9B,EAAM,EAAGA,EAAM4B,EAAQG,OAAQ/B,IAClC4B,EAAQ5B,KAAS4B,EAAQ5B,EAAM,KACjC4B,EAAQ5B,IAAQ,EAChB4B,EAAQ5B,EAAM,GAAK,EAEnBf,GAAc2C,EAAQ5B,GACtBrB,EAAM+B,YAAczB,GAMjB2C,IAFPA,EAAUA,EAAQC,OAAO,SAAAG,GAAKA,OAAM,IAANA,IAEvBJ,EAAQG,OAAS5C,GACtByC,EAAQ3B,KAAK,GAGR2B,OAAAA","file":"main.356d6f26.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\n\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst messageGameOver = document.querySelector('.message-lose');\n\nconst fieldRow = document.querySelectorAll('.field-row');\n\nlet totalScore = 0;\nconst rows = 4;\nconst columns = 4;\n\nconst gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction udateGameField() {\n  const randomRow = Math.floor(Math.random() * rows);\n  const randomCell = Math.floor(Math.random() * columns);\n  const randomNumber = Math.floor(Math.random() * 10);\n  const smallDigit = randomNumber < 9 ? 2 : 4;\n\n  if (gameField[randomRow][randomCell] === 0) {\n    gameField[randomRow][randomCell] = smallDigit;\n    updeteInfo();\n  } else {\n    udateGameField();\n    checkforfGameOver();\n  }\n\n  const arrOfNumbers = [];\n\n  for (const arr of gameField) {\n    for (const num of arr) {\n      arrOfNumbers.push(num);\n    }\n  }\n\n  const maxCellNum = Math.max(...arrOfNumbers);\n\n  if (maxCellNum === 2048) {\n    messageWin.classList.remove('hidden');\n  }\n};\n\nfunction updeteInfo() {\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      const gameCell = gameField[row][cell];\n      const fieldCell = fieldRow[row].children[cell];\n\n      if (gameCell === 0) {\n        fieldCell.textContent = '';\n        fieldCell.className = 'field-cell';\n      } else {\n        fieldCell.textContent = gameCell;\n        fieldCell.className = 'field-cell';\n\n        fieldCell\n          .classList.add(`field-cell--${gameCell}`);\n      }\n    }\n  }\n}\n\nfunction checkforfGameOver() {\n  let emptyCells = 0;\n\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      if (gameField[row][cell] === 0) {\n        emptyCells++;\n      }\n    }\n  }\n\n  if (emptyCells === 0 && !possiblesMovements()) {\n    messageGameOver.classList.remove('hidden');\n  }\n}\n\nfunction possiblesMovements() {\n  for (let row = 0; row < rows - 1; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      if (gameField[row][cell] === gameField[row + 1][cell]) {\n        return true;\n      }\n    }\n  }\n\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns - 1; cell++) {\n      if (gameField[row][cell] === gameField[row][cell + 1]) {\n        return true;\n      }\n    }\n  }\n}\n\nbutton.addEventListener('click', () => {\n  button.classList.remove('start');\n  button.classList.add('restart');\n\n  messageStart.classList.add('hidden');\n  messageGameOver.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  totalScore = 0;\n  score.textContent = 0;\n\n  if (button.classList.contains('restart')) {\n    button.textContent = 'Restart';\n    restart();\n  }\n\n  udateGameField();\n  udateGameField();\n});\n\nfunction restart() {\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      gameField[row][cell] = 0;\n    }\n  }\n}\n\ndocument.addEventListener('keydown', function(ev) {\n  const key = ev.key;\n\n  if (button.classList.contains('restart')) {\n    switch (key) {\n      case 'ArrowLeft':\n        moveCells('left');\n        udateGameField();\n        break;\n\n      case 'ArrowRight':\n        moveCells('right');\n        udateGameField();\n        break;\n\n      case 'ArrowUp':\n        moveCells('up');\n        udateGameField();\n        break;\n\n      case 'ArrowDown':\n        moveCells('down');\n        udateGameField();\n        break;\n    }\n  }\n});\n\nfunction moveCells(direction) {\n  const gameFieldReversed = [\n    [],\n    [],\n    [],\n    [],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let cell = 0; cell < columns; cell++) {\n      gameFieldReversed[r].push(gameField[cell][r]);\n    }\n\n    let row = gameField[r];\n\n    switch (direction) {\n      case 'left':\n        row = gameField[r];\n        row = slide(row);\n        gameField[r] = row;\n        break;\n\n      case 'right':\n        row.reverse();\n        row = gameField[r];\n        row = slide(row);\n        row.reverse();\n        gameField[r] = row;\n        break;\n\n      case 'up':\n        row = gameFieldReversed[r];\n        row = slide(row);\n        gameFieldReversed[r] = row;\n        break;\n\n      case 'down':\n        row = gameFieldReversed[r];\n        row.reverse();\n        row = slide(row);\n        row.reverse();\n        gameFieldReversed[r] = row;\n        break;\n    }\n  }\n\n  if (direction === 'up' || direction === 'down') {\n    for (let row = 0; row < rows; row++) {\n      for (let coll = 0; coll < columns; coll++) {\n        gameField[coll][row] = gameFieldReversed[row][coll];\n      }\n    }\n  }\n}\n\nconst slide = (gameFieldRow) => {\n  let numbers = gameFieldRow.filter(el => el !== 0);\n\n  for (let num = 0; num < numbers.length; num++) {\n    if (numbers[num] === numbers[num + 1]) {\n      numbers[num] *= 2;\n      numbers[num + 1] = 0;\n\n      totalScore += numbers[num];\n      score.textContent = totalScore;\n    }\n  }\n\n  numbers = numbers.filter(x => x !== 0);\n\n  while (numbers.length < columns) {\n    numbers.push(0);\n  }\n\n  return numbers;\n};\n"]}